"use strict";angular.module("resize").service("resizeService",["$q",function(a){var b,c=this;this.createImage=function(b){var c=a.defer(),d=new Image;return d.onload=function(){c.resolve(d)},d.src=b,c.promise},this.startResize=function(a,b){c.createImage(a).then(function(a){b({err:null,data:c.resize(a)})},function(a){b({err:a,data:null})})},this.resize=function(a){for(b=document.createElement("canvas"),b.width=a.width,b.height=a.height,b.getContext("2d").drawImage(a,0,0,b.width,b.height);b.width>480;)b=c.halfSize(b);return b.toDataURL("image/jpeg")},this.halfSize=function(a){var b=document.createElement("canvas");return b.width=a.width/2,b.height=a.height/2,b.getContext("2d").drawImage(a,0,0,b.width,b.height),b}}]),angular.module("resize",[]),angular.module("resize").service("readLocalPicService",["$q",function(a){function b(a){var b=null;switch(a.target.error.code){case FileError.NOT_FOUND_ERR:b="NOT_FOUND_ERR";break;case FileError.SECURITY_ERR:b="SECURITY_ERR";break;case FileError.ABORT_ERR:b="ABORT_ERR";break;case FileError.NOT_READABLE_ERR:b="NOT_READABLE_ERR";break;case FileError.ENCODING_ERR:b="ENCODING_ERR";break;case FileError.NO_MODIFICATION_ALLOWED_ERR:b="NO_MODIFICATION_ALLOWED_ERR";break;case FileError.INVALID_STATE_ERR:b="INVALID_STATE_ERR";break;case FileError.SYNTAX_ERR:b="SYNTAX_ERR";break;case FileError.INVALID_MODIFICATION_ERR:b="INVALID_MODIFICATION_ERR";break;case FileError.QUOTA_EXCEEDED_ERR:b="QUOTA_EXCEEDED_ERR";break;case FileError.TYPE_MISMATCH_ERR:b="TYPE_MISMATCH_ERR";break;case FileError.PATH_EXISTS_ERR:b="PATH_EXISTS_ERR";break;default:b="Unknown Error: "+a.target.error.code}return b}this.readFileInput=function(c){var d=a.defer();if(c.files&&c.files[0]){var e=new FileReader;e.onload=function(a){d.resolve(a.target.result)},e.onabort=function(a){d.reject("Fail to convert file in base64img, aborded: "+b(a))},e.onerror=function(a){d.reject("Fail to convert file in base64img, error: "+b(a))},e.readAsDataURL(c.files[0])}else d.reject("No file selected");return d.promise}}]);